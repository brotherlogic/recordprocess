syntax = "proto3";

package recordprocess;

import "github.com/brotherlogic/recordcollection/proto/recordcollection.proto";

option go_package = ".;godiscogs";

message Scores {
  repeated RecordScore scores = 1;
}

message Config {
  int64 last_run_time = 1;
  map<int32, int64> next_update_time = 2;
}

message RecordScore {
  int32 instance_id = 1;
  int32 rating = 2;
  recordcollection.ReleaseMetadata.Category category = 3;
  int64 score_time = 4;
  string rule_applied = 5;
}

message GetScoreRequest {
  int32 instance_id = 1;
}

message GetScoreResponse {
  repeated RecordScore scores = 1;
}

message ForceRequest {
  int32 instance_id = 1;
}

message ForceResponse {
  recordcollection.Record result = 1;
  string reason = 2;
}

service ScoreService {
  rpc GetScore(GetScoreRequest) returns (GetScoreResponse) {};
  rpc Force(ForceRequest) returns (ForceResponse) {};
}
